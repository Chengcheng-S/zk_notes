<svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" id="mind-svg-con" version="1.1" width="5354.000059185606px" height="4894.999926017993px" style="position: absolute; left: 0px; top: 0px; width: 5354.000059px; height: 4894.999926px; background: rgb(62, 60, 61); z-index: 999;"><defs></defs><g id="svgbackgroundid"><defs></defs><rect x="0" y="0" width="5354.000059185606" height="4894.999926017993" fill="#3e3c3d"></rect></g><g><defs><pattern patternUnits="userSpaceOnUse" id="pattern_mark_0" width="300" height="300"><text x="150" y="100" fill="rgb(42,40,41)" font-size="18" transform="rotate(-45, 150, 150)" style="dominant-baseline: middle; text-anchor: middle;">Scc</text></pattern></defs><rect fill="url(#pattern_mark_0)" x="0" y="0" width="5354.000059185606" height="4894.999926017993" id="rect_mark_0" pointer-events="none"></rect></g><g transform="translate(-9842.999970407198, -7491.000014796403)" id="sdjakdjak5"><defs></defs><g class="svg-topic-con" transform="translate(0.5,0.5)"><path part="right" sub="true" id="line_0136cb46f92f" d="M10000.000013563367 9938.500054253473 L10206.999986436631 9116.000027126736" stroke="#c5b677" fill="none" stroke-width="3"></path><path part="right" sub="true" id="line_d80a2fbd47df" d="M10000.000013563367 9938.500054253473 L10206.999986436631 10967.50006781684" stroke="#c5b677" fill="none" stroke-width="3"></path><path part="right" sub="true" id="line_6986c18110f0" d="M10000.000013563367 9938.500054253473 L10206.999986436631 11537.499999999998" stroke="#c5b677" fill="none" stroke-width="3"></path><path part="right" sub="true" id="line_2e2b170aacaaf66f" d="M10000.000013563367 9938.500054253473 L10206.999986436631 12118.499891493055" stroke="#c5b677" fill="none" stroke-width="3"></path></g><g class="svg-connection-con" transform="translate(0.5,0.5)"></g><g class="svg-freesums-con" transform="translate(0.5,0.5)"></g><g class="svg-freebos-con" transform="translate(0.5,0.5)"></g></g><g id="2e2b170aacaaf66f"><rect x="364.000059185606" y="4605.999866832387" rx="0px" ry="0px" width="74" height="44" style="fill: #c5b677; stroke:#ffffff;stroke-width:0;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="16px" font-weight="bold" fill="rgb(255, 255, 255)" style="font-size:16px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#ffffff;font-style:normal;text-align:left;font-weight:bold;"><tspan x="380" y="4634"><tspan dx="0">verfiy</tspan></tspan></text></g></g><g id="db2436fd1be45f59"><rect x="465.5156545928029" y="4593.000044389205" rx="1px" ry="1px" width="569" height="69" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="478" y="4613"><tspan dx="0">pub fn verify(&amp;self, image_id: impl Into&lt;Digest&gt;) -&gt; Result&lt;(), VerificationError&gt; {</tspan></tspan><tspan x="478" y="4632.6"><tspan dx="0">        self.verify_with_context(&amp;VerifierContext::default(), image_id)</tspan></tspan><tspan x="478" y="4652.200000000001"><tspan dx="0">    }</tspan></tspan></text></g></g><g id="9aaf38864f64cf29"><rect x="1062.1719082919033" y="4389.999926017993" rx="1px" ry="1px" width="617" height="145" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1074" y="4410"><tspan dx="0">if self.inner.verifier_parameters() != self.metadata.verifier_parameters {</tspan></tspan><tspan x="1074" y="4429.6"><tspan dx="0">            return Err(VerificationError::VerifierParametersMismatch {</tspan></tspan><tspan x="1074" y="4449.200000000001"><tspan dx="0">                expected: self.inner.verifier_parameters(),</tspan></tspan><tspan x="1074" y="4468.800000000001"><tspan dx="0">                received: self.metadata.verifier_parameters,</tspan></tspan><tspan x="1074" y="4488.4000000000015"><tspan dx="0">            });</tspan></tspan><tspan x="1074" y="4508.000000000002"><tspan dx="0">        }</tspan></tspan><tspan x="1074" y="4527.600000000002"><tspan dx="0">验证参数： 它比较内部验证器参数和元数据中的验证器参数是否匹配，如果不匹配则返回错误。</tspan></tspan></text></g></g><g id="f2cd4efb025d0949"><rect x="1062.1719082919033" y="4554.999926017993" rx="1px" ry="1px" width="321" height="50" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1074" y="4575"><tspan dx="0">self.inner.verify_integrity_with_context(ctx)?;</tspan></tspan><tspan x="1074" y="4594.6"><tspan dx="0">验证完整性</tspan></tspan></text></g></g><g id="4a93bd6c24deb928"><rect x="1062.1719082919033" y="4624.999926017993" rx="1px" ry="1px" width="635" height="240" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1074" y="4645"><tspan dx="0">if expected_claim.digest() != self.inner.claim()?.digest() {</tspan></tspan><tspan x="1074" y="4664.6"><tspan dx="0">            tracing::debug!(</tspan></tspan><tspan x="1074" y="4684.200000000001"><tspan dx="0">                "receipt claim does not match expected claim:\nreceipt: {:#?}\nexpected: {:#?}",</tspan></tspan><tspan x="1074" y="4703.800000000001"><tspan dx="0">                self.inner.claim()?,</tspan></tspan><tspan x="1074" y="4723.4000000000015"><tspan dx="0">                expected_claim</tspan></tspan><tspan x="1074" y="4743.000000000002"><tspan dx="0">            );</tspan></tspan><tspan x="1074" y="4762.600000000002"><tspan dx="0">            return Err(VerificationError::ClaimDigestMismatch {</tspan></tspan><tspan x="1074" y="4782.200000000003"><tspan dx="0">                expected: expected_claim.digest(),</tspan></tspan><tspan x="1074" y="4801.800000000003"><tspan dx="0">                received: self.claim()?.digest(),</tspan></tspan><tspan x="1074" y="4821.400000000003"><tspan dx="0">            });</tspan></tspan><tspan x="1074" y="4841.000000000004"><tspan dx="0">        }</tspan></tspan><tspan x="1074" y="4860.600000000004"><tspan dx="0">检查声明，检查验证的收据上的声明是否与预期的匹配。</tspan></tspan></text></g></g><g id="6986c18110f0"><rect x="364.000059185606" y="4024.999926017993" rx="0px" ry="0px" width="106" height="44" style="fill: #c5b677; stroke:#ffffff;stroke-width:0;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="16px" font-weight="bold" fill="rgb(255, 255, 255)" style="font-size:16px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#ffffff;font-style:normal;text-align:left;font-weight:bold;"><tspan x="380" y="4053"><tspan dx="0">compress</tspan></tspan></text></g></g><g id="a292adbe4df8e34c"><rect x="498.218809185606" y="3942.000103574811" rx="1px" ry="1px" width="351" height="50" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="510" y="3962"><tspan dx="0">get_prover_server(opts)?.compress(opts, receipt)</tspan></tspan><tspan x="510" y="3981.6"><tspan dx="0">根据提供的recipt 压缩为对应的recipt</tspan></tspan></text></g></g><g id="fa511822b65ac7bf"><rect x="877.3281397964015" y="3733.000044389205" rx="1px" ry="1px" width="324" height="157" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="889" y="3879"><tspan dx="0"> </tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6657196ae4b0d477fce94661?e=1716987770&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Q4ZMPWOmzaiyIL2JdVS3ykt5kXU=" transform="translate(889.3281693892045, 3738.999985203599)" width="300" height="115"></image></g><g id="27adc0b3ec7f3a91"><rect x="877.3281397964015" y="3909.999926017993" rx="1px" ry="1px" width="324" height="113" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="889" y="4012"><tspan dx="0"> </tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/66571980e4b0fbb3efbd29cc?e=1716987792&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:oedy-gBZcSWgpHnSyTqkajT7rWg=" transform="translate(889.3281693892045, 3915.999866832387)" width="300" height="71"></image></g><g id="04336c1aa872b7da"><rect x="877.3281397964015" y="4043.000044389205" rx="1px" ry="1px" width="324" height="158" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="889" y="4190"><tspan dx="0"> </tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/66571992e4b0d31e866e0864?e=1716987810&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:mC9bJdcGNmMDUG6r3gHBZYBa1fU=" transform="translate(889.3281693892045, 4048.999985203599)" width="300" height="116"></image></g><g id="4b8e0031b83fb2d9"><rect x="1237.3281548239968" y="3944.999926017993" rx="1px" ry="1px" width="314" height="44" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1243" y="3962"><tspan dx="0">self.composite_to_succinct(inner)?;</tspan></tspan><tspan x="1243" y="3981.6"><tspan dx="0">self.succinct_to_groth16(&amp;succinct_receipt)?;</tspan></tspan></text></g></g><g id="f7a976a992196085"><rect x="1579.1719193892045" y="3733.999985203599" rx="1px" ry="1px" width="534" height="293" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1591" y="3997"><tspan dx="0">将composite 转换为 succinct receipt </tspan></tspan><tspan x="1591" y="4016.6"><tspan dx="0">压缩receipt，然后将 receipt.assumption_receipts 中的每个假设收据压缩并解决</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6657d22be4b01348470a1a86?e=1717035067&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:qZXNAQG8sY8L8ShyQi6nW7MvIi4=" transform="translate(1591.1719119910038, 3739.999926017993)" width="300" height="233"></image></g><g id="3d6d4ee7d967cd2b"><rect x="2140.750029592803" y="3825.999866832387" rx="1px" ry="1px" width="703" height="109" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2153" y="3924"><tspan dx="0">将一个条件收据(conditional)和一个假设收据(assumption)结合，生成一个无条件的收据(SuccinctReceipt)。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6657d579e4b0e49d7d2692c0?e=1717035913&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:WN2upfhscpd4dwu-0881BpX5Kw4=" transform="translate(2152.750059185606, 3832.000103574811)" width="300" height="67"></image></g><g id="caa96d69ac29b7e0"><rect x="1579.1719193892045" y="4047.000103574811" rx="1px" ry="1px" width="324" height="153" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1591" y="4189"><tspan dx="0"> </tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6657d240e4b0992d6d6e28a5?e=1717035088&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:FHVfIHRCQJMxi1BcBbYBz5VyMQY=" transform="translate(1591.1719119910038, 4053.000044389205)" width="300" height="111"></image></g><g id="87f6a6f52aad6ee2"><rect x="1931.171875" y="4088.000044389205" rx="1px" ry="1px" width="647" height="71" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1943" y="4129"><tspan dx="0">将receipt转换为groth16 的关键步骤，</tspan><tspan dx="0" style="fill:rgb(231, 79, 76);">但仅支持在x86 架构的cpu上运行</tspan><tspan dx="0">，且必须装有docker</tspan></tspan><tspan x="1943" y="4148.6"><tspan dx="0">函数使用Docker容器运行risc0-groth16-prover来生成证明，最后解析生成的证明文件并返回结果。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6657d654e4b0189fe8d239b7?e=1717036132&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:pPok88dyTuBlSy9Fsykl9FOL8-I=" transform="translate(1943.171904592803, 4093.999985203599)" width="300" height="11"></image></g><g id="d0cbb6e8dc3138af"><rect x="498.218809185606" y="4220.999866832387" rx="1px" ry="1px" width="324" height="139" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="510" y="4349"><tspan dx="0">receipt 类型</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/66571a3ce4b0a0c8a53f85df?e=1716987980&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:_GmPLFjEuCJSgR-r_tfqFCbJ7f4=" transform="translate(510.2187647964014, 4227.000103574811)" width="300" height="97"></image></g><g id="d80a2fbd47df"><rect x="364.000059185606" y="3454.999926017993" rx="0px" ry="0px" width="92" height="44" style="fill: #c5b677; stroke:#ffffff;stroke-width:0;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="16px" font-weight="bold" fill="rgb(255, 255, 255)" style="font-size:16px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#ffffff;font-style:normal;text-align:left;font-weight:bold;"><tspan x="380" y="3483"><tspan dx="0">execute</tspan></tspan></text></g></g><g id="e77ceb9d6fbed943"><rect x="483.8906397964014" y="3379.999926017993" rx="1px" ry="1px" width="324" height="193" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="496" y="3562"><tspan dx="0"> </tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656c08ae4b05bec723a0130?e=1716965018&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:QrgavljUxTdpfYCEhNeRrXlGfOc=" transform="translate(495.8906693892045, 3386.000014796402)" width="300" height="151"></image></g><g id="51c8a56c8cda113c"><rect x="835.8906693892045" y="3433.000044389205" rx="1px" ry="1px" width="537" height="88" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="848" y="3453"><tspan dx="0">pub fn run_with_callback&lt;F&gt;(&amp;mut self, mut callback: F) -&gt; Result&lt;Session&gt;</tspan></tspan><tspan x="848" y="3472.6"><tspan dx="0">    where</tspan></tspan><tspan x="848" y="3492.2"><tspan dx="0">        F: FnMut(Segment) -&gt; Result&lt;Box&lt;dyn SegmentRef&gt;&gt;,</tspan></tspan><tspan x="848" y="3511.7999999999997"><tspan dx="0">运行执行器，并在每个段上调用回调函数。</tspan></tspan></text></g></g><g id="d07b0838bb62b305"><rect x="1400.9531471946023" y="3249.999926017993" rx="1px" ry="1px" width="324" height="276" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1413" y="3515"><tspan dx="0">执行并调用回调函数</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656c11de4b099b9acc8f6d9?e=1716965166&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:0bfDQpX8j-0lUt7hiKvkE27I5zU=" transform="translate(1412.9531582919035, 3256.000014796402)" width="300" height="234"></image></g><g id="34300a49a9f0b3a1"><rect x="1400.9531471946023" y="3546.000014796402" rx="1px" ry="1px" width="324" height="157" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1413" y="3692"><tspan dx="0">处理日志，并生成性能分析报告</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656c1ebe4b063a910a3853b?e=1716965371&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:FJSeemFt6NvCCUDdyvnhKIJC7T8=" transform="translate(1412.9531582919035, 3551.999955610796)" width="300" height="115"></image></g><g id="0136cb46f92f"><rect x="364.000059185606" y="1602.999970407197" rx="0px" ry="0px" width="74" height="44" style="fill: #c5b677; stroke:#ffffff;stroke-width:0;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="16px" font-weight="bold" fill="rgb(255, 255, 255)" style="font-size:16px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#ffffff;font-style:normal;text-align:left;font-weight:bold;background-color:#c5b677;"><tspan x="380" y="1631"><tspan dx="0">prove</tspan></tspan></text></g></g><g id="50a40572093e"><rect x="466.3906397964014" y="1608.9999852035987" rx="1px" ry="1px" width="109" height="32" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="478" y="1630"><tspan dx="0" style="font-size:12px;">prove_with_ctx</tspan></tspan></text></g></g><g id="be0999fcd986db0b"><rect x="603.5937499999999" y="1608.9999852035987" rx="1px" ry="1px" width="246" height="32" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="616" y="1630"><tspan dx="0">self.prove_session(ctx, &amp;session)</tspan></tspan></text></g></g><g id="225cf6d49d5f747b"><rect x="877.2031471946023" y="1608.9999852035987" rx="1px" ry="1px" width="185" height="32" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="889" y="1630"><tspan dx="0">generate segment proof</tspan></tspan></text></g></g><g id="90a920fb1389adce"><rect x="1090.203154592803" y="30" rx="1px" ry="1px" width="305" height="32" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1102" y="51"><tspan dx="0">hook.on_pre_prove_segment(&amp;segment)；</tspan></tspan></text></g></g><g id="03c6f1b3ea075a5e"><rect x="1090.203154592803" y="1608.9999852035987" rx="1px" ry="1px" width="267" height="32" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1102" y="1630"><tspan dx="0">self.prove_segment(ctx, &amp;segment)?</tspan></tspan></text></g></g><g id="2dc0a021b035848b"><rect x="1385.3437758937025" y="1565.0000000000002" rx="1px" ry="1px" width="390" height="50" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1397" y="1585"><tspan dx="0">self.segment_prover.prove_segment(&amp;segment.inner)?;</tspan></tspan><tspan x="1397" y="1604.6"><tspan dx="0">实际的证明生成</tspan></tspan></text></g></g><g id="758390f52bf2b0c5"><rect x="1802.937529592803" y="81.9999556107955" rx="1px" ry="1px" width="324" height="163" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1815" y="234"><tspan dx="0">创建prover，设置相应的属性</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656931ce4b09f196d694c39?e=1716953388&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:txZQvHDVqu2uI_PPgk5S_j-zaRA=" transform="translate(1814.9375221946023, 87.999970407197)" width="300" height="121"></image></g><g id="ea11f08eb9f45b28"><rect x="1802.937529592803" y="265.0000000000001" rx="1px" ry="1px" width="652" height="212" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1815" y="466"><tspan dx="0">将输入数据和po2值组合成一个向量，并对该向量进行哈希处理，然后将处理结果提交给Prover对象。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/66569337e4b099b9acc78b1e?e=1716953416&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:4Ree92eCTwRha8FOKZKdF4PQo5k=" transform="translate(1814.9375221946023, 271.0000147964016)" width="300" height="170"></image></g><g id="971de143bbd9ef20"><rect x="1802.937529592803" y="496.9999556107956" rx="1px" ry="1px" width="324" height="253" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1815" y="739"><tspan dx="0">设置mix 和随机值</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/665693dde4b0914652b6968d?e=1716953581&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:FuvoZHl-M2aNnqOngF_Kuiihg8Y=" transform="translate(1814.9375221946023, 502.9999704071971)" width="300" height="211"></image></g><g id="24d60ca93412584d"><rect x="1802.937529592803" y="1890.0000000000002" rx="1px" ry="1px" width="924" height="88" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1815" y="1910"><tspan dx="0">let seal = prover.finalize(&amp;[&amp;mix, &amp;witgen.io], self.circuit_hal.as_ref());</tspan></tspan><tspan x="1815" y="1929.6"><tspan dx="0">生成证明</tspan></tspan><tspan x="1815" y="1949.1999999999998"><tspan dx="0">该过程完成 zk-STARK 的最终证明生成。包括生成和验证检查多项式、混合多项式系数以及执行 FRI 协议，通过利用 GPU 并行计算来加速多项</tspan></tspan><tspan x="1815" y="1968.7999999999997"><tspan dx="0">式评估和插值，提高整个过程的效率。</tspan></tspan></text></g></g><g id="a95ecdb9df2339e6"><rect x="2754.937559185606" y="770.0000000000001" rx="1px" ry="1px" width="224" height="32" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="791"><tspan dx="0">risc0/zkp/src/prove/prover.rs</tspan></tspan></text></g></g><g id="61371ff7861b2630"><rect x="2754.937559185606" y="821.9999926017994" rx="1px" ry="1px" width="728" height="75" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="886"><tspan dx="0">生成一个随机多项式混合值 ploy_mix, 计算域 domain 扩展元素 ext_size。用于在DEEP-ALI协议中的约束压缩。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/665696a6e4b085e2aa093abe?e=1716954294&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:EUIpeXlrSlcFR5TLIOk8i0fLm2c=" transform="translate(2766.937588778409, 827.9999704071971)" width="300" height="33"></image></g><g id="4a1920067b6fdfd0"><rect x="2754.937559185606" y="916.9999926017994" rx="1px" ry="1px" width="435" height="145" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="1051"><tspan dx="0">生成检查多项式， 调用 circuit_hal.eval_check 计算检查多项式。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/665697e3e4b0fbb3efb88a9d?e=1716954611&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:5gYgGPCpFk8lBrYqE5kCqU7X0lI=" transform="translate(2766.937588778409, 922.999988902699)" width="300" height="103"></image></g><g id="fce6933c8763a17a"><rect x="2754.937559185606" y="1081.9999833540485" rx="1px" ry="1px" width="377" height="50" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="1102"><tspan dx="0">self.hal.batch_interpolate_ntt(&amp;check_poly, ext_size);</tspan></tspan><tspan x="2767" y="1121.6"><tspan dx="0">快速傅立叶变换，将多项式转为系数形式。</tspan></tspan></text></g></g><g id="d432e2b68c1752f9"><rect x="2754.937559185606" y="1151.9999833540485" rx="1px" ry="1px" width="324" height="71" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="1212"><tspan dx="0">创建多项式组，并使用merkle 提交到IOP，</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/665699d6e4b0914652b6dd05?e=1716955110&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:yCNJNoMIBbXx3cmzm7EFJOVrAb0=" transform="translate(2766.937588778409, 1157.9999842788236)" width="300" height="29"></image></g><g id="fb38c7f9521cf016"><rect x="2754.937559185606" y="1242.9999854347925" rx="1px" ry="1px" width="508" height="88" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="1263"><tspan dx="0">let z = self.iop.random_ext_elem();</tspan></tspan><tspan x="2767" y="1282.6"><tspan dx="0">let back_one = H::ExtElem::from_subfield(&amp;H::Elem::ROU_REV[self.po2]);</tspan></tspan><tspan x="2767" y="1302.1999999999998"><tspan dx="0">let mut all_xs = Vec::new();</tspan></tspan><tspan x="2767" y="1321.7999999999997"><tspan dx="0">生成随机点Z，并计算所有的X值，为评估多项式做准备。</tspan></tspan></text></g></g><g id="da6e1dc4383ceef8"><rect x="2754.937559185606" y="1350.9999870531487" rx="1px" ry="1px" width="583" height="215" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="1555"><tspan dx="0">评估多项式，在给定的点（由 xs 向量表示）上评估多项式，并将结果存储在 out 向量中。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/66569b8ae4b05a71d8ccc1f5?e=1716955547&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:1cMRSJ6AJCCyTVmyR8PbO_2dbTk=" transform="translate(2766.937588778409, 1356.9999833540485)" width="300" height="173"></image></g><g id="bf64d8aef30280e2"><rect x="2754.937559185606" y="1585.999977805398" rx="1px" ry="1px" width="373" height="258" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="1833"><tspan dx="0">插值得到系数 coeff_u ,计算z的幂，并评估检查多项式。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656b7cde4b0992d6d688a6d?e=1716962782&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:zMBbPDRmHe0LA3qc9wa4WVR4TqE=" transform="translate(2766.937588778409, 1591.9999926017995)" width="300" height="216"></image></g><g id="81c62567b1e1450d"><rect x="2754.937559185606" y="1863.9999852035985" rx="1px" ry="1px" width="324" height="334" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="2187"><tspan dx="0">混合多项式组和检查多项式系数</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656b8f5e4b05edb12458826?e=1716963077&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:zpNsw1yTtHMAVdF-EI7QUzBtsjU=" transform="translate(2766.937588778409, 1870.0000000000002)" width="300" height="292"></image></g><g id="eab807f4ce129fc4"><rect x="2754.937559185606" y="2217.999970407197" rx="1px" ry="1px" width="241" height="342" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="2549"><tspan dx="0">调整系数和检查多项式除法</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656bad9e4b0914652b7cdc5?e=1716963562&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:G0cwr5f97TTBEwMTPDoAo6NGYOQ=" transform="translate(2766.937588778409, 2223.999985203599)" width="217" height="300"></image></g><g id="460c0977896d0979"><rect x="2754.937559185606" y="2688.999985203599" rx="1px" ry="1px" width="670" height="300" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="2767" y="2959"><tspan dx="0">生成证明：</tspan></tspan><tspan x="2767" y="2978.6"><tspan dx="0">将最终的多项式系数`final_poly_coeffs`求和，然后位反转，进行FRI协议证明多项式次数，最后生成证明</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656bba6e4b09f196d6a9344?e=1716963767&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:F-Q8w2pzZwtmHexsH0TaMGiTRtY=" transform="translate(2766.937588778409, 2694.999926017993)" width="300" height="240"></image></g><g id="ee4ed0b0d8b20aea"><rect x="3453.156220407197" y="2723.000044389205" rx="1px" ry="1px" width="924" height="231" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="3465" y="2905"><tspan dx="0">fri_prove</tspan></tspan><tspan x="3465" y="2924.6"><tspan dx="0">FRI协议的核心逻辑，通过多轮次的迭代，逐步减少多项式的系数，最终生成并提交经过位反转排列的多项式系数，并执行多次查询来验证多项式</tspan></tspan><tspan x="3465" y="2944.2"><tspan dx="0">的低阶性质。 每一步都利用了硬件抽象层（HAL）的功能来提高效率和并行处理能力。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656bcfde4b04f21ccc9acec?e=1716964109&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:KLulgah9WZYTFxA5o2VZjpj0xIA=" transform="translate(3465.15625, 2728.999985203599)" width="300" height="152"></image></g><g id="e13864eba551a723"><rect x="4405.156397964015" y="2579.999926017993" rx="1px" ry="1px" width="524" height="130" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="4417" y="2699"><tspan dx="0">初始化变量，并且迭代计算FRI 轮次，直到系数的数量小于 FRI_MIN_DEGREE。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656bd50e4b063a910a36256?e=1716964192&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Rq5R7oEftwkKdDnXQe8xMjuKPKM=" transform="translate(4417.156279592803, 2586.000014796402)" width="300" height="88"></image></g><g id="f4c3de4c9d88c438"><rect x="4405.156397964015" y="2729.999926017993" rx="1px" ry="1px" width="426" height="88" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="4417" y="2750"><tspan dx="0">let final_coeffs = hal.alloc_elem("final_coeffs", coeffs.size())</tspan></tspan><tspan x="4417" y="2769.6"><tspan dx="0">;</tspan></tspan><tspan x="4417" y="2789.2"><tspan dx="0">    hal.eltwise_copy_elem(&amp;final_coeffs, &amp;coeffs);</tspan></tspan><tspan x="4417" y="2808.7999999999997"><tspan dx="0">    hal.batch_bit_reverse(&amp;final_coeffs, ext_size);</tspan></tspan><tspan x="4417" y="2828.3999999999996"><tspan dx="0">重新排列最终系数，将系数进行逐位复制，批量进行位反操作。</tspan></tspan></text></g></g><g id="065501fa51409b47"><rect x="4405.156397964015" y="2838.000044389205" rx="1px" ry="1px" width="324" height="88" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="4417" y="2915"><tspan dx="0">写入和提交最终多项式，</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656be27e4b0992d6d68b019?e=1716964407&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:2kNEDpEHmSXRm2rU2doKHuLb3zw=" transform="translate(4417.156279592803, 2843.999985203599)" width="300" height="46"></image></g><g id="b37f114837bf8ec7"><rect x="4405.156397964015" y="2946.000014796402" rx="1px" ry="1px" width="918" height="152" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="4417" y="3087"><tspan dx="0">进行查询，执行一定数量的查询（QUERIES）。对于每个查询，它获取一个’随机’索引，并为此索引执行’内部’证明。然后，它写入每轮的证明。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn.processon.com/6656be5be4b04f21ccc9b617?e=1716964459&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:M6pgbzjG_K7i92dXsjyinseMTUQ=" transform="translate(4417.156279592803, 2951.999955610796)" width="300" height="110"></image></g><g id="fe3252b0c549ca9b"><rect x="1385.3437758937025" y="3118.000044389205" rx="1px" ry="1px" width="306" height="50" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1397" y="3138"><tspan dx="0">receipt.verify_integrity_with_context(ctx)?;</tspan></tspan><tspan x="1397" y="3157.6"><tspan dx="0">验证receipt的完整性</tspan></tspan></text></g></g><g id="3416aef0fd4b9d6f"><rect x="1090.203154592803" y="3188.000044389205" rx="1px" ry="1px" width="303" height="32" style="fill: transparent; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="14px" font-weight="bold" fill="rgb(197, 182, 119)" style="font-size:14px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#c5b677;font-style:normal;text-align:left;font-weight:bold;"><tspan x="1102" y="3209"><tspan dx="0">hook.on_post_prove_segment(&amp;segment);</tspan></tspan></text></g></g><g transform="translate(364.000059185606, 4389.999926017993)" id="sdjakdjak0"><g id="subline_2e2b170aacaaf66f" transform="translate(0.5, 0.5)"><path id="line_db2436fd1be45f59" d="M77.515625 237.5 L90.515625 237.5 L101.515625 237.5" p="2e2b170aacaaf66f" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_9aaf38864f64cf29" d="M674.171875 237.5 L687.171875 237.5 L698.171875 72.5" p="db2436fd1be45f59" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_f2cd4efb025d0949" d="M674.171875 237.5 L687.171875 237.5 L698.171875 190" p="db2436fd1be45f59" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_4a93bd6c24deb928" d="M674.171875 237.5 L687.171875 237.5 L698.171875 355" p="db2436fd1be45f59" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path></g><g transform="translate(0.5,0.5)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(364.000059185606, 3733.000044389205)" id="sdjakdjak1"><g id="subline_6986c18110f0" transform="translate(0.5, 0.5)"><path id="line_a292adbe4df8e34c" d="M110.21880425347221 313.50000452112266 L123.21880425347221 313.50000452112266 L134.21875 234.00000678168402" p="6986c18110f0" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_fa511822b65ac7bf" d="M489.3281430844907 234.00000678168402 L502.3281430844907 234.00000678168402 L513.3281792534722 78.43750565140336" p="a292adbe4df8e34c" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_27adc0b3ec7f3a91" d="M489.3281430844907 234.00000678168402 L502.3281430844907 234.00000678168402 L513.3281792534722 233.43749999999997" p="a292adbe4df8e34c" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_04336c1aa872b7da" d="M489.3281430844907 234.00000678168402 L502.3281430844907 234.00000678168402 L513.3281792534722 388.9375022605613" p="a292adbe4df8e34c" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_f7a976a992196085" d="M1191.1719247323495 233.99999547887728 L1204.1719247323495 233.99999547887728 L1215.171915690104 147.5" p="4b8e0031b83fb2d9" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_3d6d4ee7d967cd2b" d="M1752.7500226056131 147.5 L1765.7500226056131 147.5 L1776.7500361689813 147.43750678168402" p="f7a976a992196085" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_caa96d69ac29b7e0" d="M1191.1719247323495 233.99999547887728 L1204.1719247323495 233.99999547887728 L1215.171915690104 390.43749773943864" p="4b8e0031b83fb2d9" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_87f6a6f52aad6ee2" d="M1543.1719111689813 390.43749773943864 L1556.1719111689813 390.43749773943864 L1567.171902126736 390.5000022605613" p="caa96d69ac29b7e0" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_d0cbb6e8dc3138af" d="M110.21880425347221 313.50000452112266 L123.21880425347221 313.50000452112266 L134.21875 557.437506781684" p="6986c18110f0" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path></g><g transform="translate(0.5,0.5)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"><path id="sum_4b8e0031b83fb2d9" fill="none" stroke="#bf1e1b" stroke-width="1" d=" M 855 4 C 872 8 847 229 869 234 M 855 464 C 872 460 847 239 869 234" stroke-linecap="round"></path></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(364.000059185606, 3249.999926017993)" id="sdjakdjak2"><g id="subline_d80a2fbd47df" transform="translate(0.5, 0.5)"><path id="line_e77ceb9d6fbed943" d="M95.890625 226.5 L108.890625 226.5 L119.890625 226.4375" p="d80a2fbd47df" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_51c8a56c8cda113c" d="M447.890625 226.4375 L460.890625 226.4375 L471.890625 227" p="e77ceb9d6fbed943" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_d07b0838bb62b305" d="M1012.953125 227 L1025.953125 227 L1036.953125 137.9375" p="51c8a56c8cda113c" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_34300a49a9f0b3a1" d="M1012.953125 227 L1025.953125 227 L1036.953125 374.4375" p="51c8a56c8cda113c" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path></g><g transform="translate(0.5,0.5)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(364.000059185606, 30)" id="sdjakdjak3"><g id="subline_0136cb46f92f" transform="translate(0.5, 0.5)"><path id="line_50a40572093e" d="M78.39063178168402 1595 L91.39063178168402 1595 L102.39064534505208 1594.937472873264" p="0136cb46f92f" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_be0999fcd986db0b" d="M215.59376356336804 1594.937472873264 L228.59376356336804 1594.937472873264 L239.59377712673611 1594.937472873264" p="50a40572093e" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_225cf6d49d5f747b" d="M489.2031453450521 1594.937472873264 L502.2031453450521 1594.937472873264 L513.2031387752957 1594.937472873264" p="be0999fcd986db0b" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_90a920fb1389adce" d="M702.2031387752957 1594.937472873264 L715.2031387752957 1594.937472873264 L726.203138563368 15.9375" p="225cf6d49d5f747b" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_03c6f1b3ea075a5e" d="M702.2031387752957 1594.937472873264 L715.2031387752957 1594.937472873264 L726.203138563368 1594.937472873264" p="225cf6d49d5f747b" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_2dc0a021b035848b" d="M997.3437771267361 1594.937472873264 L1010.3437771267361 1594.937472873264 L1021.343756781684 1559.9999660915798" p="03c6f1b3ea075a5e" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_758390f52bf2b0c5" d="M1414.9375 1559.9999660915798 L1427.9375 1559.9999660915798 L1438.937513563368 133.43743218315973" p="2dc0a021b035848b" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_ea11f08eb9f45b28" d="M1414.9375 1559.9999660915798 L1427.9375 1559.9999660915798 L1438.937513563368 340.9375" p="2dc0a021b035848b" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_971de143bbd9ef20" d="M1414.9375 1559.9999660915798 L1427.9375 1559.9999660915798 L1438.937513563368 593.4374830457899" p="2dc0a021b035848b" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_24d60ca93412584d" d="M1414.9375 1559.9999660915798 L1427.9375 1559.9999660915798 L1438.937513563368 1903.999972873264" p="2dc0a021b035848b" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_a95ecdb9df2339e6" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 755.9374660915798" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_61371ff7861b2630" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 829.437476264106" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_4a1920067b6fdfd0" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 959.437476264106" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_fce6933c8763a17a" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 1076.9999694824219" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_d432e2b68c1752f9" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 1157.4374707539876" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_fb38c7f9521cf016" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 1256.9999754428864" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_da6e1dc4383ceef8" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 1428.437474568685" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_bf64d8aef30280e2" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 1684.9374728732637" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_81c62567b1e1450d" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 2000.9374660915798" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_eab807f4ce129fc4" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 2358.937445746528" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_460c0977896d0979" d="M2366.937486436632 1903.999972873264 L2379.937486436632 1903.999972873264 L2390.9375678168403 2808.9999728732637" p="24d60ca93412584d" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_ee4ed0b0d8b20aea" d="M3065.156209309896 2808.9999728732637 L3078.156209309896 2808.9999728732637 L3089.1561550564234 2808.499959309896" p="460c0977896d0979" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_e13864eba551a723" d="M4017.1562635633677 2808.499959309896 L4030.1562635633677 2808.499959309896 L4041.1562093098955 2614.9374728732637" p="ee4ed0b0d8b20aea" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_f4c3de4c9d88c438" d="M4017.1562635633677 2808.499959309896 L4030.1562635633677 2808.499959309896 L4041.1562093098955 2743.9999728732637" p="ee4ed0b0d8b20aea" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_065501fa51409b47" d="M4017.1562635633677 2808.499959309896 L4030.1562635633677 2808.499959309896 L4041.1562093098955 2851.937459309896" p="ee4ed0b0d8b20aea" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_b37f114837bf8ec7" d="M4017.1562635633677 2808.499959309896 L4030.1562635633677 2808.499959309896 L4041.1562093098955 2991.937527126736" p="ee4ed0b0d8b20aea" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_fe3252b0c549ca9b" d="M997.3437771267361 1594.937472873264 L1010.3437771267361 1594.937472873264 L1021.343756781684 3112.999945746528" p="03c6f1b3ea075a5e" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path><path id="line_3416aef0fd4b9d6f" d="M702.2031387752957 1594.937472873264 L715.2031387752957 1594.937472873264 L726.203138563368 3173.937445746528" p="225cf6d49d5f747b" stroke="#c5b677" fill="none" stroke-linecap="round" stroke-width="2"></path></g><g transform="translate(0.5,0.5)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(30, 2416.000014796402)" id="sdjakdjak4"><g id="subline_root" transform="translate(0.5, 0.5)"></g><g transform="translate(0.5,0.5)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g id="root"><rect x="30" y="2416.000014796402" rx="0px" ry="0px" width="254" height="63" style="fill: #488268; stroke:none;stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="24px" font-weight="bold" fill="rgb(255, 255, 255)" style="font-size:24px;font-family:'Microsoft YaHei',微软雅黑,Arial;color:#fff;font-style:normal;text-align:left;font-weight:bold;"><tspan x="54" y="2456"><tspan dx="0">risc0_local_prover</tspan></tspan></text></g></g></svg>